{
  "name"    : "config.demobrowser.json - does the actual compile jobs, needs a generated config.demo.json",

  "include" :
  [
    {
      "path" : "./config.demo.json",
      "as"   : "demos"
    },
    {
      "path" : "${QOOXDOO_PATH}/tool/data/config/application.json",
      "import" : [
        "info"
      ]
    }

  ],

  "let" :
  {
    "CACHE"        : "${TMPDIR}/qx${QOOXDOO_VERSION}/cache",
    "QOOXDOO_PATH" : "QOOX_PATH",
    "THEME"        : "demobrowser.Theme"
  },

  "jobs" :
  {
    "db-common" :
    {
      "desc"    : "common settings for Demobrowser jobs",

      "let" :
      {
        "APPLICATION"  : "demobrowser",
        "LOCALES"      : [ "en" ]
      },

      "library" :
      [
        {
          "manifest" : "${QOOXDOO_PATH}/component/library/logpane/Manifest.json"
        },

        {
          "manifest" : "${QOOXDOO_PATH}/component/library/versionlabel/Manifest.json"
        },

        {
          "manifest" : "${QOOXDOO_PATH}/framework/Manifest.json"
        },

        {
          "manifest" : "${QOOXDOO_PATH}/component/demobrowser/Manifest.json"
        }
      ],

      "include" :
      [
        "${APPLICATION}.Application",
        "${THEME}"
      ],

      "environment" :
      {
        "qx.version" : "${QOOXDOO_VERSION}",
        "qx.revision" : "${QOOXDOO_REVISION}",
        "qx.application" : "${APPLICATION}.Application",
        "qx.theme" : "${THEME}",
        "qx.contrib" : false,
        "qx.allowUrlSettings" : true
      },

      // the next is in since resource copying is done here for the demos as well
      "asset-let" :
      {
        "qx.icontheme" : ["Tango", "Oxygen"],
        "qx.theme"     : ["Indigo"]
      },

      "cache" :
      {
        "compile" : "${CACHE}"
      }
    },


    "source-script" :
    {
      "desc"    : "create includer script of Demobrowser",

      "extend" : ["db-common"],

      "compile-options" :
      {
        "paths"  :
        {
          "file" : "./source/script/${APPLICATION}.js",
          "app-root" : "source"
        },
        "code"   :
        {
          "except" : ["*"]
        },
        "uris": {
          "add-nocache-param": false
        }
      },

      "compile" : { "type" : "source" }
    },


    "source-demos" :
    {
      "desc"    : "create source version for each demo",

      "let"    : { "APPLICATION" : "DEMO_NS" },

      "extend" : ["demos::source"],

      "compile-options": {
        "uris": {
          "add-nocache-param": false
        }
      }
    },

    "source" :
    {
      "desc"    : "create source version of Demobrowser",

      "run" :
      [
        "source-script",
        "source-demos"
      ]
    },


    // Repeating this job from base.json, as the original draws in too many
    // macros from base.json's global 'let' (!) 
    "source-hybrid" : 
    {
      "extend"  : [ "source" ],

      "compile-options" :
      {
        "code" : { "=except" : [ "${APPLICATION}.*" ] }
      },

      "compile" : { "type" : "hybrid" }
    }
  }
}
